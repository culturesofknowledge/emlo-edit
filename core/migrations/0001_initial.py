# Generated by Django 4.0.6 on 2022-11-03 12:28

import core.helper.model_utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CofkHelpPages',
            fields=[
                ('page_id', models.AutoField(primary_key=True, serialize=False)),
                ('page_title', models.CharField(max_length=500)),
                ('custom_url', models.CharField(blank=True, max_length=500, null=True)),
                ('published_text', models.TextField()),
                ('draft_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cofk_help_pages',
            },
        ),
        migrations.CreateModel(
            name='CofkLookupDocumentType',
            fields=[
                ('document_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_type_code', models.CharField(max_length=3, unique=True)),
                ('document_type_desc', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cofk_lookup_document_type',
            },
        ),
        migrations.CreateModel(
            name='CofkReportOutputs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_id', models.CharField(max_length=250)),
                ('line_number', models.IntegerField()),
                ('line_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cofk_report_outputs',
            },
        ),
        migrations.CreateModel(
            name='CofkUnionComment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('creation_user', models.CharField(max_length=50)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.CharField(max_length=50)),
                ('uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cofk_union_comment',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='CofkUnionNationality',
            fields=[
                ('nationality_id', models.AutoField(primary_key=True, serialize=False)),
                ('nationality_desc', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cofk_union_nationality',
            },
        ),
        migrations.CreateModel(
            name='CofkUnionRelationshipType',
            fields=[
                ('relationship_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('desc_left_to_right', models.CharField(max_length=200)),
                ('desc_right_to_left', models.CharField(max_length=200)),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('creation_user', models.CharField(max_length=50)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cofk_union_relationship_type',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='CofkUnionResource',
            fields=[
                ('resource_id', models.AutoField(primary_key=True, serialize=False)),
                ('resource_name', models.TextField()),
                ('resource_details', models.TextField()),
                ('resource_url', models.TextField()),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('creation_user', models.CharField(max_length=50)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.CharField(max_length=50)),
                ('uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cofk_union_resource',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='CofkUnionSpeedEntryText',
            fields=[
                ('speed_entry_text_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_type', models.CharField(max_length=30)),
                ('speed_entry_text', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'cofk_union_speed_entry_text',
            },
        ),
        migrations.CreateModel(
            name='CopyCofkUnionQueryableWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iwork_id', models.IntegerField(blank=True, null=True)),
                ('work_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_of_work_std', models.DateField(blank=True, null=True)),
                ('date_of_work_std_year', models.IntegerField(blank=True, null=True)),
                ('date_of_work_std_month', models.IntegerField(blank=True, null=True)),
                ('date_of_work_std_day', models.IntegerField(blank=True, null=True)),
                ('date_of_work_as_marked', models.CharField(blank=True, max_length=250, null=True)),
                ('date_of_work_inferred', models.SmallIntegerField(blank=True, null=True)),
                ('date_of_work_uncertain', models.SmallIntegerField(blank=True, null=True)),
                ('date_of_work_approx', models.SmallIntegerField(blank=True, null=True)),
                ('creators_searchable', models.TextField(blank=True, null=True)),
                ('creators_for_display', models.TextField(blank=True, null=True)),
                ('authors_as_marked', models.TextField(blank=True, null=True)),
                ('notes_on_authors', models.TextField(blank=True, null=True)),
                ('authors_inferred', models.SmallIntegerField(blank=True, null=True)),
                ('authors_uncertain', models.SmallIntegerField(blank=True, null=True)),
                ('addressees_searchable', models.TextField(blank=True, null=True)),
                ('addressees_for_display', models.TextField(blank=True, null=True)),
                ('addressees_as_marked', models.TextField(blank=True, null=True)),
                ('addressees_inferred', models.SmallIntegerField(blank=True, null=True)),
                ('addressees_uncertain', models.SmallIntegerField(blank=True, null=True)),
                ('places_from_searchable', models.TextField(blank=True, null=True)),
                ('places_from_for_display', models.TextField(blank=True, null=True)),
                ('origin_as_marked', models.TextField(blank=True, null=True)),
                ('origin_inferred', models.SmallIntegerField(blank=True, null=True)),
                ('origin_uncertain', models.SmallIntegerField(blank=True, null=True)),
                ('places_to_searchable', models.TextField(blank=True, null=True)),
                ('places_to_for_display', models.TextField(blank=True, null=True)),
                ('destination_as_marked', models.TextField(blank=True, null=True)),
                ('destination_inferred', models.SmallIntegerField(blank=True, null=True)),
                ('destination_uncertain', models.SmallIntegerField(blank=True, null=True)),
                ('manifestations_searchable', models.TextField(blank=True, null=True)),
                ('manifestations_for_display', models.TextField(blank=True, null=True)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('people_mentioned', models.TextField(blank=True, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('related_resources', models.TextField(blank=True, null=True)),
                ('language_of_work', models.CharField(blank=True, max_length=255, null=True)),
                ('work_is_translation', models.SmallIntegerField(blank=True, null=True)),
                ('flags', models.TextField(blank=True, null=True)),
                ('edit_status', models.CharField(blank=True, max_length=3, null=True)),
                ('general_notes', models.TextField(blank=True, null=True)),
                ('original_catalogue', models.CharField(blank=True, max_length=100, null=True)),
                ('accession_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('work_to_be_deleted', models.SmallIntegerField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.CharField(blank=True, max_length=50, null=True)),
                ('drawer', models.CharField(blank=True, max_length=50, null=True)),
                ('editors_notes', models.TextField(blank=True, null=True)),
                ('manifestation_type', models.CharField(blank=True, max_length=50, null=True)),
                ('original_notes', models.TextField(blank=True, null=True)),
                ('relevant_to_cofk', models.CharField(blank=True, max_length=1, null=True)),
                ('subjects', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'copy_cofk_union_queryable_work',
            },
        ),
        migrations.CreateModel(
            name='ProActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type_id', models.TextField(blank=True, null=True)),
                ('activity_name', models.TextField(blank=True, null=True)),
                ('activity_description', models.TextField(blank=True, null=True)),
                ('date_type', models.TextField(blank=True, null=True)),
                ('date_from_year', models.TextField(blank=True, null=True)),
                ('date_from_month', models.TextField(blank=True, null=True)),
                ('date_from_day', models.TextField(blank=True, null=True)),
                ('date_from_uncertainty', models.TextField(blank=True, null=True)),
                ('date_to_year', models.TextField(blank=True, null=True)),
                ('date_to_month', models.TextField(blank=True, null=True)),
                ('date_to_day', models.TextField(blank=True, null=True)),
                ('date_to_uncertainty', models.TextField(blank=True, null=True)),
                ('notes_used', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('creation_user', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.TextField(blank=True, null=True)),
                ('event_label', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_activity',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='ProActivityRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_activity_id', models.IntegerField(blank=True, null=True)),
                ('filename', models.TextField()),
                ('spreadsheet_row', models.IntegerField()),
                ('combined_spreadsheet_row', models.IntegerField()),
            ],
            options={
                'db_table': 'pro_activity_relation',
            },
        ),
        migrations.CreateModel(
            name='ProAssertion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assertion_type', models.TextField(blank=True, null=True)),
                ('assertion_id', models.TextField(blank=True, null=True)),
                ('source_id', models.TextField(blank=True, null=True)),
                ('source_description', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
            ],
            options={
                'db_table': 'pro_assertion',
            },
        ),
        migrations.CreateModel(
            name='ProIngestMapV2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.TextField(blank=True, null=True)),
                ('mapping', models.TextField(blank=True, null=True)),
                ('s_event_category', models.TextField(blank=True, null=True)),
                ('s_event_type', models.TextField(blank=True, null=True)),
                ('s_role', models.TextField(blank=True, null=True)),
                ('p_event_category', models.TextField(blank=True, null=True)),
                ('p_event_type', models.TextField(blank=True, null=True)),
                ('p_role', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_ingest_map_v2',
            },
        ),
        migrations.CreateModel(
            name='ProIngestV8',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_category', models.TextField(blank=True, null=True)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('event_name', models.TextField(blank=True, null=True)),
                ('pp_i', models.TextField(blank=True, null=True)),
                ('pp_name', models.TextField(blank=True, null=True)),
                ('pp_role', models.TextField(blank=True, null=True)),
                ('sp_i', models.TextField(blank=True, null=True)),
                ('sp_name', models.TextField(blank=True, null=True)),
                ('sp_type', models.TextField(blank=True, null=True)),
                ('sp_role', models.TextField(blank=True, null=True)),
                ('df_year', models.TextField(blank=True, null=True)),
                ('df_month', models.TextField(blank=True, null=True)),
                ('df_day', models.TextField(blank=True, null=True)),
                ('df_uncertainty', models.TextField(blank=True, null=True)),
                ('dt_year', models.TextField(blank=True, null=True)),
                ('dt_month', models.TextField(blank=True, null=True)),
                ('dt_day', models.TextField(blank=True, null=True)),
                ('dt_uncertainty', models.TextField(blank=True, null=True)),
                ('date_type', models.TextField(blank=True, null=True)),
                ('location_i', models.TextField(blank=True, null=True)),
                ('location_detail', models.TextField(blank=True, null=True)),
                ('location_city', models.TextField(blank=True, null=True)),
                ('location_region', models.TextField(blank=True, null=True)),
                ('location_country', models.TextField(blank=True, null=True)),
                ('location_type', models.TextField(blank=True, null=True)),
                ('ts_abbrev', models.TextField(blank=True, null=True)),
                ('ts_detail', models.TextField(blank=True, null=True)),
                ('editor', models.TextField(blank=True, null=True)),
                ('noted_used', models.TextField(blank=True, null=True)),
                ('add_notes', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('spreadsheet_row_id', models.TextField(blank=True, null=True)),
                ('combined_csv_row_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_ingest_v8',
            },
        ),
        migrations.CreateModel(
            name='ProIngestV8Toreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_category', models.TextField(blank=True, null=True)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('event_name', models.TextField(blank=True, null=True)),
                ('pp_i', models.TextField(blank=True, null=True)),
                ('pp_name', models.TextField(blank=True, null=True)),
                ('pp_role', models.TextField(blank=True, null=True)),
                ('sp_i', models.TextField(blank=True, null=True)),
                ('sp_name', models.TextField(blank=True, null=True)),
                ('sp_type', models.TextField(blank=True, null=True)),
                ('sp_role', models.TextField(blank=True, null=True)),
                ('df_year', models.TextField(blank=True, null=True)),
                ('df_month', models.TextField(blank=True, null=True)),
                ('df_day', models.TextField(blank=True, null=True)),
                ('df_uncertainty', models.TextField(blank=True, null=True)),
                ('dt_year', models.TextField(blank=True, null=True)),
                ('dt_month', models.TextField(blank=True, null=True)),
                ('dt_day', models.TextField(blank=True, null=True)),
                ('dt_uncertainty', models.TextField(blank=True, null=True)),
                ('date_type', models.TextField(blank=True, null=True)),
                ('location_i', models.TextField(blank=True, null=True)),
                ('location_detail', models.TextField(blank=True, null=True)),
                ('location_city', models.TextField(blank=True, null=True)),
                ('location_region', models.TextField(blank=True, null=True)),
                ('location_country', models.TextField(blank=True, null=True)),
                ('location_type', models.TextField(blank=True, null=True)),
                ('ts_abbrev', models.TextField(blank=True, null=True)),
                ('ts_detail', models.TextField(blank=True, null=True)),
                ('editor', models.TextField(blank=True, null=True)),
                ('noted_used', models.TextField(blank=True, null=True)),
                ('add_notes', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('spreadsheet_row_id', models.TextField(blank=True, null=True)),
                ('combined_csv_row_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_ingest_v8_toreview',
            },
        ),
        migrations.CreateModel(
            name='ProLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_id', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('activity_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_location',
            },
        ),
        migrations.CreateModel(
            name='ProPeopleCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.TextField(blank=True, null=True)),
                ('iperson_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_people_check',
            },
        ),
        migrations.CreateModel(
            name='ProPrimaryPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('activity_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_primary_person',
            },
        ),
        migrations.CreateModel(
            name='ProRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.TextField(blank=True, null=True)),
                ('subject_type', models.TextField(blank=True, null=True)),
                ('subject_role_id', models.TextField(blank=True, null=True)),
                ('relationship_id', models.TextField(blank=True, null=True)),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_type', models.TextField(blank=True, null=True)),
                ('object_role_id', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('activity_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_relationship',
            },
        ),
        migrations.CreateModel(
            name='ProRoleInActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.TextField(blank=True, null=True)),
                ('entity_id', models.TextField(blank=True, null=True)),
                ('role_id', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('activity_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_role_in_activity',
            },
        ),
        migrations.CreateModel(
            name='ProTextualSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('chapterarticletitle', models.TextField(blank=True, db_column='chapterArticleTitle', null=True)),
                ('volumeseriesnumber', models.TextField(blank=True, db_column='volumeSeriesNumber', null=True)),
                ('issuenumber', models.TextField(blank=True, db_column='issueNumber', null=True)),
                ('pagenumber', models.TextField(blank=True, db_column='pageNumber', null=True)),
                ('editor', models.TextField(blank=True, null=True)),
                ('placepublication', models.TextField(blank=True, db_column='placePublication', null=True)),
                ('datepublication', models.TextField(blank=True, db_column='datePublication', null=True)),
                ('urlresource', models.TextField(blank=True, db_column='urlResource', null=True)),
                ('abbreviation', models.TextField(blank=True, null=True)),
                ('fullbibliographicdetails', models.TextField(blank=True, db_column='fullBibliographicDetails', null=True)),
                ('edition', models.TextField(blank=True, null=True)),
                ('reprintfacsimile', models.TextField(blank=True, db_column='reprintFacsimile', null=True)),
                ('repository', models.TextField(blank=True, null=True)),
                ('creation_user', models.TextField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.TextField(blank=True, null=True)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
            ],
            options={
                'db_table': 'pro_textual_source',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='CofkUnionRelationship',
            fields=[
                ('relationship_id', models.AutoField(primary_key=True, serialize=False)),
                ('left_table_name', models.CharField(max_length=100)),
                ('left_id_value', models.CharField(max_length=100)),
                ('right_table_name', models.CharField(max_length=100)),
                ('right_id_value', models.CharField(max_length=100)),
                ('relationship_valid_from', models.DateTimeField(blank=True, null=True)),
                ('relationship_valid_till', models.DateTimeField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('creation_user', models.CharField(max_length=50)),
                ('change_timestamp', models.DateTimeField(blank=True, default=core.helper.model_utils.default_current_timestamp, null=True)),
                ('change_user', models.CharField(max_length=50)),
                ('relationship_type', models.ForeignKey(db_column='relationship_type', on_delete=django.db.models.deletion.DO_NOTHING, to='core.cofkunionrelationshiptype')),
            ],
            options={
                'db_table': 'cofk_union_relationship',
            },
            bases=(models.Model, core.helper.model_utils.RecordTracker),
        ),
        migrations.CreateModel(
            name='CofkMenu',
            fields=[
                ('menu_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_item_name', models.TextField()),
                ('menu_order', models.IntegerField(blank=True, null=True)),
                ('has_children', models.IntegerField()),
                ('class_name', models.CharField(blank=True, max_length=100, null=True)),
                ('method_name', models.CharField(blank=True, max_length=100, null=True)),
                ('user_restriction', models.CharField(max_length=30)),
                ('hidden_parent', models.IntegerField(blank=True, null=True)),
                ('called_as_popup', models.IntegerField()),
                ('collection', models.CharField(max_length=20)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.cofkmenu')),
            ],
            options={
                'db_table': 'cofk_menu',
            },
        ),
        migrations.CreateModel(
            name='CofkHelpOptions',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('button_name', models.CharField(max_length=100)),
                ('order_in_manual', models.IntegerField()),
                ('menu_depth', models.IntegerField()),
                ('help_page', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.cofkhelppages')),
                ('menu_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.cofkmenu')),
            ],
            options={
                'db_table': 'cofk_help_options',
                'unique_together': {('menu_item', 'button_name')},
            },
        ),
    ]
