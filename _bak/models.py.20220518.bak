# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class CofkCollectAddresseeOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    addressee_id = models.IntegerField()
    iperson_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_addressee = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_addressee_of_work'
        unique_together = (('upload', 'iwork_id', 'addressee_id'),)


class CofkCollectAuthorOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    author_id = models.IntegerField()
    iperson_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_author = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_author_of_work'
        unique_together = (('upload', 'iwork_id', 'author_id'),)


class CofkCollectDestinationOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    destination_id = models.IntegerField()
    location_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_destination = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_destination_of_work'
        unique_together = (('upload', 'iwork_id', 'destination_id'),)


class CofkCollectImageOfManif(models.Model):
    upload = models.ForeignKey('CofkCollectUpload', models.DO_NOTHING)
    manifestation_id = models.IntegerField()
    image_filename = models.CharField(max_length=2000)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.
    iwork_id = models.IntegerField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_image_of_manif'


class CofkCollectInstitution(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    institution_id = models.IntegerField()
    union_institution = models.ForeignKey('CofkUnionInstitution', models.DO_NOTHING, blank=True, null=True)
    institution_name = models.TextField()
    institution_city = models.TextField()
    institution_country = models.TextField()
    upload_name = models.CharField(max_length=254, blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.
    institution_synonyms = models.TextField(blank=True, null=True)
    institution_city_synonyms = models.TextField(blank=True, null=True)
    institution_country_synonyms = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_institution'
        unique_together = (('upload', 'institution_id'),)


class CofkCollectInstitutionResource(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    resource_id = models.IntegerField()
    institution_id = models.IntegerField()
    resource_name = models.TextField()
    resource_details = models.TextField()
    resource_url = models.TextField()

    class Meta:
        db_table = 'cofk_collect_institution_resource'
        unique_together = (('upload', 'resource_id'),)


class CofkCollectLanguageOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    language_of_work_id = models.IntegerField()
    iwork_id = models.IntegerField()
    language_code = models.ForeignKey('Iso639LanguageCodes', models.DO_NOTHING, db_column='language_code')
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_language_of_work'
        unique_together = (('upload', 'iwork_id', 'language_of_work_id'),)


class CofkCollectLocation(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    location_id = models.IntegerField()
    union_location = models.ForeignKey('CofkUnionLocation', models.DO_NOTHING, blank=True, null=True)
    location_name = models.CharField(max_length=500)
    element_1_eg_room = models.CharField(max_length=100)
    element_2_eg_building = models.CharField(max_length=100)
    element_3_eg_parish = models.CharField(max_length=100)
    element_4_eg_city = models.CharField(max_length=100)
    element_5_eg_county = models.CharField(max_length=100)
    element_6_eg_country = models.CharField(max_length=100)
    element_7_eg_empire = models.CharField(max_length=100)
    notes_on_place = models.TextField(blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)
    upload_name = models.CharField(max_length=254, blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.
    location_synonyms = models.TextField(blank=True, null=True)
    latitude = models.CharField(max_length=20, blank=True, null=True)
    longitude = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_location'
        unique_together = (('upload', 'location_id'),)


class CofkCollectLocationResource(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    resource_id = models.IntegerField()
    location_id = models.IntegerField()
    resource_name = models.TextField()
    resource_details = models.TextField()
    resource_url = models.TextField()

    class Meta:
        db_table = 'cofk_collect_location_resource'
        unique_together = (('upload', 'resource_id'),)


class CofkCollectManifestation(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    manifestation_id = models.IntegerField()
    iwork_id = models.IntegerField()
    union_manifestation = models.ForeignKey('CofkUnionManifestation', models.DO_NOTHING, blank=True, null=True)
    manifestation_type = models.CharField(max_length=3)
    repository_id = models.IntegerField(blank=True, null=True)
    id_number_or_shelfmark = models.CharField(max_length=500, blank=True, null=True)
    printed_edition_details = models.TextField(blank=True, null=True)
    manifestation_notes = models.TextField(blank=True, null=True)
    image_filenames = models.TextField(blank=True, null=True)
    upload_name = models.CharField(max_length=254, blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_manifestation'
        unique_together = (('upload', 'iwork_id', 'manifestation_id'),)


class CofkCollectOccupationOfPerson(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    occupation_of_person_id = models.IntegerField()
    iperson_id = models.IntegerField()
    occupation = models.ForeignKey('CofkUnionRoleCategory', models.DO_NOTHING)

    class Meta:
        db_table = 'cofk_collect_occupation_of_person'
        unique_together = (('upload', 'occupation_of_person_id'),)


class CofkCollectOriginOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    origin_id = models.IntegerField()
    location_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_origin = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_origin_of_work'
        unique_together = (('upload', 'iwork_id', 'origin_id'),)


class CofkCollectPerson(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    iperson_id = models.IntegerField()
    union_iperson = models.ForeignKey('CofkUnionPerson', models.DO_NOTHING, blank=True, null=True)
    person = models.ForeignKey('CofkUnionPerson', models.DO_NOTHING, blank=True, null=True)
    primary_name = models.CharField(max_length=200)
    alternative_names = models.TextField(blank=True, null=True)
    roles_or_titles = models.TextField(blank=True, null=True)
    gender = models.CharField(max_length=1)
    is_organisation = models.CharField(max_length=1)
    organisation_type = models.IntegerField(blank=True, null=True)
    date_of_birth_year = models.IntegerField(blank=True, null=True)
    date_of_birth_month = models.IntegerField(blank=True, null=True)
    date_of_birth_day = models.IntegerField(blank=True, null=True)
    date_of_birth_is_range = models.SmallIntegerField()
    date_of_birth2_year = models.IntegerField(blank=True, null=True)
    date_of_birth2_month = models.IntegerField(blank=True, null=True)
    date_of_birth2_day = models.IntegerField(blank=True, null=True)
    date_of_birth_inferred = models.SmallIntegerField()
    date_of_birth_uncertain = models.SmallIntegerField()
    date_of_birth_approx = models.SmallIntegerField()
    date_of_death_year = models.IntegerField(blank=True, null=True)
    date_of_death_month = models.IntegerField(blank=True, null=True)
    date_of_death_day = models.IntegerField(blank=True, null=True)
    date_of_death_is_range = models.SmallIntegerField()
    date_of_death2_year = models.IntegerField(blank=True, null=True)
    date_of_death2_month = models.IntegerField(blank=True, null=True)
    date_of_death2_day = models.IntegerField(blank=True, null=True)
    date_of_death_inferred = models.SmallIntegerField()
    date_of_death_uncertain = models.SmallIntegerField()
    date_of_death_approx = models.SmallIntegerField()
    flourished_year = models.IntegerField(blank=True, null=True)
    flourished_month = models.IntegerField(blank=True, null=True)
    flourished_day = models.IntegerField(blank=True, null=True)
    flourished_is_range = models.SmallIntegerField()
    flourished2_year = models.IntegerField(blank=True, null=True)
    flourished2_month = models.IntegerField(blank=True, null=True)
    flourished2_day = models.IntegerField(blank=True, null=True)
    notes_on_person = models.TextField(blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)
    upload_name = models.CharField(max_length=254, blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_person'
        unique_together = (('upload', 'iperson_id'),)


class CofkCollectPersonMentionedInWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    mention_id = models.IntegerField()
    iperson_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_person_mentioned = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_person_mentioned_in_work'
        unique_together = (('upload', 'iwork_id', 'mention_id'),)


class CofkCollectPersonResource(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    resource_id = models.IntegerField()
    iperson_id = models.IntegerField()
    resource_name = models.TextField()
    resource_details = models.TextField()
    resource_url = models.TextField()

    class Meta:
        db_table = 'cofk_collect_person_resource'
        unique_together = (('upload', 'resource_id'),)


class CofkCollectPlaceMentionedInWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    mention_id = models.IntegerField()
    location_id = models.IntegerField()
    iwork_id = models.IntegerField()
    notes_on_place_mentioned = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_place_mentioned_in_work'
        unique_together = (('upload', 'iwork_id', 'mention_id'),)


class CofkCollectStatus(models.Model):
    status_id = models.IntegerField(primary_key=True)
    status_desc = models.CharField(max_length=100)
    editable = models.SmallIntegerField()

    class Meta:
        db_table = 'cofk_collect_status'


class CofkCollectSubjectOfWork(models.Model):
    upload = models.OneToOneField('CofkCollectUpload', models.DO_NOTHING, primary_key=True)
    subject_of_work_id = models.IntegerField()
    iwork_id = models.IntegerField()
    subject = models.ForeignKey('CofkUnionSubject', models.DO_NOTHING)

    class Meta:
        db_table = 'cofk_collect_subject_of_work'
        unique_together = (('upload', 'iwork_id', 'subject_of_work_id'),)


class CofkCollectToolSession(models.Model):
    session_id = models.AutoField(primary_key=True)
    session_timestamp = models.DateTimeField()
    session_code = models.TextField(unique=True, blank=True, null=True)
    username = models.ForeignKey('CofkCollectToolUser', models.DO_NOTHING, db_column='username', blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_tool_session'


class CofkCollectToolUser(models.Model):
    tool_user_id = models.AutoField(primary_key=True)
    tool_user_email = models.CharField(unique=True, max_length=100)
    tool_user_surname = models.CharField(max_length=100)
    tool_user_forename = models.CharField(max_length=100)
    tool_user_pw = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_collect_tool_user'


class CofkCollectUpload(models.Model):
    upload_id = models.AutoField(primary_key=True)
    upload_username = models.CharField(max_length=100)
    upload_description = models.TextField(blank=True, null=True)
    upload_status = models.ForeignKey(CofkCollectStatus, models.DO_NOTHING, db_column='upload_status')
    upload_timestamp = models.DateTimeField()
    total_works = models.IntegerField()
    works_accepted = models.IntegerField()
    works_rejected = models.IntegerField()
    uploader_email = models.CharField(max_length=250)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.
    upload_name = models.CharField(max_length=254, blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_upload'


class CofkCollectWork(models.Model):
    upload = models.OneToOneField(CofkCollectUpload, models.DO_NOTHING, primary_key=True)
    iwork_id = models.IntegerField()
    union_iwork = models.ForeignKey('CofkUnionWork', models.DO_NOTHING, blank=True, null=True)
    work = models.ForeignKey('CofkUnionWork', models.DO_NOTHING, blank=True, null=True)
    date_of_work_as_marked = models.CharField(max_length=250, blank=True, null=True)
    original_calendar = models.CharField(max_length=2)
    date_of_work_std_year = models.IntegerField(blank=True, null=True)
    date_of_work_std_month = models.IntegerField(blank=True, null=True)
    date_of_work_std_day = models.IntegerField(blank=True, null=True)
    date_of_work2_std_year = models.IntegerField(blank=True, null=True)
    date_of_work2_std_month = models.IntegerField(blank=True, null=True)
    date_of_work2_std_day = models.IntegerField(blank=True, null=True)
    date_of_work_std_is_range = models.SmallIntegerField()
    date_of_work_inferred = models.SmallIntegerField()
    date_of_work_uncertain = models.SmallIntegerField()
    date_of_work_approx = models.SmallIntegerField()
    notes_on_date_of_work = models.TextField(blank=True, null=True)
    authors_as_marked = models.TextField(blank=True, null=True)
    authors_inferred = models.SmallIntegerField()
    authors_uncertain = models.SmallIntegerField()
    notes_on_authors = models.TextField(blank=True, null=True)
    addressees_as_marked = models.TextField(blank=True, null=True)
    addressees_inferred = models.SmallIntegerField()
    addressees_uncertain = models.SmallIntegerField()
    notes_on_addressees = models.TextField(blank=True, null=True)
    destination_id = models.IntegerField(blank=True, null=True)
    destination_as_marked = models.TextField(blank=True, null=True)
    destination_inferred = models.SmallIntegerField()
    destination_uncertain = models.SmallIntegerField()
    origin_id = models.IntegerField(blank=True, null=True)
    origin_as_marked = models.TextField(blank=True, null=True)
    origin_inferred = models.SmallIntegerField()
    origin_uncertain = models.SmallIntegerField()
    abstract = models.TextField(blank=True, null=True)
    keywords = models.TextField(blank=True, null=True)
    language_of_work = models.CharField(max_length=255, blank=True, null=True)
    incipit = models.TextField(blank=True, null=True)
    excipit = models.TextField(blank=True, null=True)
    accession_code = models.CharField(max_length=250, blank=True, null=True)
    notes_on_letter = models.TextField(blank=True, null=True)
    notes_on_people_mentioned = models.TextField(blank=True, null=True)
    upload_status = models.ForeignKey(CofkCollectStatus, models.DO_NOTHING, db_column='upload_status')
    editors_notes = models.TextField(blank=True, null=True)
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.
    date_of_work2_approx = models.SmallIntegerField()
    date_of_work2_inferred = models.SmallIntegerField()
    date_of_work2_uncertain = models.SmallIntegerField()
    mentioned_as_marked = models.TextField(blank=True, null=True)
    mentioned_inferred = models.SmallIntegerField()
    mentioned_uncertain = models.SmallIntegerField()
    notes_on_destination = models.TextField(blank=True, null=True)
    notes_on_origin = models.TextField(blank=True, null=True)
    notes_on_place_mentioned = models.TextField(blank=True, null=True)
    place_mentioned_as_marked = models.TextField(blank=True, null=True)
    place_mentioned_inferred = models.SmallIntegerField()
    place_mentioned_uncertain = models.SmallIntegerField()
    upload_name = models.CharField(max_length=254, blank=True, null=True)
    explicit = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_work'
        unique_together = (('upload', 'iwork_id'),)


class CofkCollectWorkResource(models.Model):
    upload = models.OneToOneField(CofkCollectUpload, models.DO_NOTHING, primary_key=True)
    resource_id = models.IntegerField()
    iwork_id = models.IntegerField()
    resource_name = models.TextField()
    resource_details = models.TextField()
    resource_url = models.TextField()
    field_id = models.CharField(db_column='_id', max_length=32, blank=True, null=True)  # Field renamed because it started with '_'.

    class Meta:
        db_table = 'cofk_collect_work_resource'
        unique_together = (('upload', 'iwork_id', 'resource_id'),)


class CofkCollectWorkSummary(models.Model):
    upload = models.OneToOneField(CofkCollectWork, models.DO_NOTHING, primary_key=True)
    work_id_in_tool = models.IntegerField()
    source_of_data = models.CharField(max_length=250, blank=True, null=True)
    notes_on_letter = models.TextField(blank=True, null=True)
    date_of_work = models.CharField(max_length=32, blank=True, null=True)
    date_of_work_as_marked = models.CharField(max_length=250, blank=True, null=True)
    original_calendar = models.CharField(max_length=30, blank=True, null=True)
    date_of_work_is_range = models.CharField(max_length=30, blank=True, null=True)
    date_of_work_inferred = models.CharField(max_length=30, blank=True, null=True)
    date_of_work_uncertain = models.CharField(max_length=30, blank=True, null=True)
    date_of_work_approx = models.CharField(max_length=30, blank=True, null=True)
    notes_on_date_of_work = models.TextField(blank=True, null=True)
    authors = models.TextField(blank=True, null=True)
    authors_as_marked = models.TextField(blank=True, null=True)
    authors_inferred = models.CharField(max_length=30, blank=True, null=True)
    authors_uncertain = models.CharField(max_length=30, blank=True, null=True)
    notes_on_authors = models.TextField(blank=True, null=True)
    addressees = models.TextField(blank=True, null=True)
    addressees_as_marked = models.TextField(blank=True, null=True)
    addressees_inferred = models.CharField(max_length=30, blank=True, null=True)
    addressees_uncertain = models.CharField(max_length=30, blank=True, null=True)
    notes_on_addressees = models.TextField(blank=True, null=True)
    destination = models.TextField(blank=True, null=True)
    destination_as_marked = models.TextField(blank=True, null=True)
    destination_inferred = models.CharField(max_length=30, blank=True, null=True)
    destination_uncertain = models.CharField(max_length=30, blank=True, null=True)
    origin = models.TextField(blank=True, null=True)
    origin_as_marked = models.TextField(blank=True, null=True)
    origin_inferred = models.CharField(max_length=30, blank=True, null=True)
    origin_uncertain = models.CharField(max_length=30, blank=True, null=True)
    abstract = models.TextField(blank=True, null=True)
    keywords = models.TextField(blank=True, null=True)
    languages_of_work = models.TextField(blank=True, null=True)
    subjects_of_work = models.TextField(blank=True, null=True)
    incipit = models.TextField(blank=True, null=True)
    excipit = models.TextField(blank=True, null=True)
    people_mentioned = models.TextField(blank=True, null=True)
    notes_on_people_mentioned = models.TextField(blank=True, null=True)
    places_mentioned = models.TextField(blank=True, null=True)
    manifestations = models.TextField(blank=True, null=True)
    related_resources = models.TextField(blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_collect_work_summary'
        unique_together = (('upload', 'work_id_in_tool'),)


class CofkHelpOptions(models.Model):
    option_id = models.AutoField(primary_key=True)
    menu_item = models.ForeignKey('CofkMenu', models.DO_NOTHING, blank=True, null=True)
    button_name = models.CharField(max_length=100)
    help_page = models.ForeignKey('CofkHelpPages', models.DO_NOTHING)
    order_in_manual = models.IntegerField()
    menu_depth = models.IntegerField()

    class Meta:
        db_table = 'cofk_help_options'
        unique_together = (('menu_item', 'button_name'),)


class CofkHelpPages(models.Model):
    page_id = models.AutoField(primary_key=True)
    page_title = models.CharField(max_length=500)
    custom_url = models.CharField(max_length=500, blank=True, null=True)
    published_text = models.TextField()
    draft_text = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_help_pages'


class CofkLookupCatalogue(models.Model):
    catalogue_id = models.AutoField(primary_key=True)
    catalogue_code = models.CharField(unique=True, max_length=100)
    catalogue_name = models.CharField(unique=True, max_length=500)
    is_in_union = models.IntegerField()
    publish_status = models.SmallIntegerField()

    class Meta:
        db_table = 'cofk_lookup_catalogue'


class CofkLookupDocumentType(models.Model):
    document_type_id = models.AutoField(primary_key=True)
    document_type_code = models.CharField(unique=True, max_length=3)
    document_type_desc = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_lookup_document_type'


class CofkMenu(models.Model):
    menu_item_id = models.AutoField(primary_key=True)
    menu_item_name = models.TextField()
    menu_order = models.AutoField(blank=True, null=True)
    parent = models.ForeignKey('self', models.DO_NOTHING, blank=True, null=True)
    has_children = models.IntegerField()
    class_name = models.CharField(max_length=100, blank=True, null=True)
    method_name = models.CharField(max_length=100, blank=True, null=True)
    user_restriction = models.CharField(max_length=30)
    hidden_parent = models.IntegerField(blank=True, null=True)
    called_as_popup = models.IntegerField()
    collection = models.CharField(max_length=20)

    class Meta:
        db_table = 'cofk_menu'


class CofkReportGroups(models.Model):
    report_group_id = models.AutoField(primary_key=True)
    report_group_title = models.TextField(blank=True, null=True)
    report_group_order = models.IntegerField()
    on_main_reports_menu = models.IntegerField()
    report_group_code = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        db_table = 'cofk_report_groups'


class CofkReportOutputs(models.Model):
    output_id = models.CharField(max_length=250)
    line_number = models.IntegerField()
    line_text = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_report_outputs'


class CofkReports(models.Model):
    report_id = models.AutoField(primary_key=True)
    report_title = models.TextField(blank=True, null=True)
    class_name = models.CharField(max_length=40, blank=True, null=True)
    method_name = models.CharField(max_length=40, blank=True, null=True)
    report_group = models.ForeignKey(CofkReportGroups, models.DO_NOTHING, blank=True, null=True)
    menu_item = models.ForeignKey(CofkMenu, models.DO_NOTHING, blank=True, null=True)
    has_csv_option = models.IntegerField()
    is_dummy_option = models.IntegerField()
    report_code = models.CharField(max_length=100, blank=True, null=True)
    parm_list = models.TextField(blank=True, null=True)
    parm_titles = models.TextField(blank=True, null=True)
    prompt_for_parms = models.SmallIntegerField()
    default_parm_values = models.TextField(blank=True, null=True)
    parm_methods = models.TextField(blank=True, null=True)
    report_help = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_reports'


class CofkRoles(models.Model):
    role_id = models.AutoField(primary_key=True)
    role_code = models.CharField(unique=True, max_length=20)
    role_name = models.TextField(unique=True)

    class Meta:
        db_table = 'cofk_roles'


class CofkSessions(models.Model):
    session_id = models.AutoField(primary_key=True)
    session_timestamp = models.DateTimeField()
    session_code = models.TextField(unique=True, blank=True, null=True)
    username = models.ForeignKey('CofkUsers', models.DO_NOTHING, db_column='username', blank=True, null=True)

    class Meta:
        db_table = 'cofk_sessions'


class CofkUnionAuditLiteral(models.Model):
    audit_id = models.AutoField(primary_key=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    change_type = models.CharField(max_length=3)
    table_name = models.CharField(max_length=100)
    key_value_text = models.CharField(max_length=100)
    key_value_integer = models.IntegerField(blank=True, null=True)
    key_decode = models.TextField(blank=True, null=True)
    column_name = models.CharField(max_length=100)
    new_column_value = models.TextField(blank=True, null=True)
    old_column_value = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_audit_literal'


class CofkUnionAuditRelationship(models.Model):
    audit_id = models.AutoField(primary_key=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    change_type = models.CharField(max_length=3)
    left_table_name = models.CharField(max_length=100)
    left_id_value_new = models.CharField(max_length=100)
    left_id_decode_new = models.TextField()
    left_id_value_old = models.CharField(max_length=100)
    left_id_decode_old = models.TextField()
    relationship_type = models.CharField(max_length=100)
    relationship_decode_left_to_right = models.CharField(max_length=100)
    relationship_decode_right_to_left = models.CharField(max_length=100)
    right_table_name = models.CharField(max_length=100)
    right_id_value_new = models.CharField(max_length=100)
    right_id_decode_new = models.TextField()
    right_id_value_old = models.CharField(max_length=100)
    right_id_decode_old = models.TextField()

    class Meta:
        db_table = 'cofk_union_audit_relationship'


class CofkUnionComment(models.Model):
    comment_id = models.AutoField(primary_key=True)
    comment = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    uuid = models.UUIDField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_comment'


class CofkUnionFavouriteLanguage(models.Model):
    language_code = models.OneToOneField('Iso639LanguageCodes', models.DO_NOTHING, db_column='language_code', primary_key=True)

    class Meta:
        db_table = 'cofk_union_favourite_language'


class CofkUnionImage(models.Model):
    image_id = models.AutoField(primary_key=True)
    image_filename = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    thumbnail = models.TextField(blank=True, null=True)
    can_be_displayed = models.CharField(max_length=1)
    display_order = models.IntegerField()
    licence_details = models.TextField()
    licence_url = models.CharField(max_length=2000)
    credits = models.CharField(max_length=2000)
    uuid = models.UUIDField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_image'


class CofkUnionInstitution(models.Model):
    institution_id = models.AutoField(primary_key=True)
    institution_name = models.TextField()
    institution_synonyms = models.TextField()
    institution_city = models.TextField()
    institution_city_synonyms = models.TextField()
    institution_country = models.TextField()
    institution_country_synonyms = models.TextField()
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    editors_notes = models.TextField(blank=True, null=True)
    uuid = models.UUIDField(blank=True, null=True)
    address = models.CharField(max_length=1000, blank=True, null=True)
    latitude = models.CharField(max_length=20, blank=True, null=True)
    longitude = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_institution'


class CofkUnionLanguageOfManifestation(models.Model):
    manifestation = models.OneToOneField('CofkUnionManifestation', models.DO_NOTHING, primary_key=True)
    language_code = models.ForeignKey('Iso639LanguageCodes', models.DO_NOTHING, db_column='language_code')
    notes = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_language_of_manifestation'
        unique_together = (('manifestation', 'language_code'),)


class CofkUnionLanguageOfWork(models.Model):
    work = models.OneToOneField('CofkUnionWork', models.DO_NOTHING, primary_key=True)
    language_code = models.ForeignKey('Iso639LanguageCodes', models.DO_NOTHING, db_column='language_code')
    notes = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_language_of_work'
        unique_together = (('work', 'language_code'),)


class CofkUnionLocation(models.Model):
    location_id = models.AutoField(primary_key=True)
    location_name = models.CharField(max_length=500)
    latitude = models.CharField(max_length=20, blank=True, null=True)
    longitude = models.CharField(max_length=20, blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    location_synonyms = models.TextField(blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)
    element_1_eg_room = models.CharField(max_length=100)
    element_2_eg_building = models.CharField(max_length=100)
    element_3_eg_parish = models.CharField(max_length=100)
    element_4_eg_city = models.CharField(max_length=100)
    element_5_eg_county = models.CharField(max_length=100)
    element_6_eg_country = models.CharField(max_length=100)
    element_7_eg_empire = models.CharField(max_length=100)
    uuid = models.UUIDField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_location'


class CofkUnionManifestation(models.Model):
    manifestation_id = models.CharField(primary_key=True, max_length=100)
    manifestation_type = models.CharField(max_length=3)
    id_number_or_shelfmark = models.CharField(max_length=500, blank=True, null=True)
    printed_edition_details = models.TextField(blank=True, null=True)
    paper_size = models.CharField(max_length=500, blank=True, null=True)
    paper_type_or_watermark = models.CharField(max_length=500, blank=True, null=True)
    number_of_pages_of_document = models.IntegerField(blank=True, null=True)
    number_of_pages_of_text = models.IntegerField(blank=True, null=True)
    seal = models.CharField(max_length=500, blank=True, null=True)
    postage_marks = models.CharField(max_length=500, blank=True, null=True)
    endorsements = models.TextField(blank=True, null=True)
    non_letter_enclosures = models.TextField(blank=True, null=True)
    manifestation_creation_calendar = models.CharField(max_length=2)
    manifestation_creation_date = models.DateField(blank=True, null=True)
    manifestation_creation_date_gregorian = models.DateField(blank=True, null=True)
    manifestation_creation_date_year = models.IntegerField(blank=True, null=True)
    manifestation_creation_date_month = models.IntegerField(blank=True, null=True)
    manifestation_creation_date_day = models.IntegerField(blank=True, null=True)
    manifestation_creation_date_inferred = models.SmallIntegerField()
    manifestation_creation_date_uncertain = models.SmallIntegerField()
    manifestation_creation_date_approx = models.SmallIntegerField()
    manifestation_is_translation = models.SmallIntegerField()
    language_of_manifestation = models.CharField(max_length=255, blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    manifestation_incipit = models.TextField(blank=True, null=True)
    manifestation_excipit = models.TextField(blank=True, null=True)
    manifestation_ps = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    manifestation_creation_date2_year = models.IntegerField(blank=True, null=True)
    manifestation_creation_date2_month = models.IntegerField(blank=True, null=True)
    manifestation_creation_date2_day = models.IntegerField(blank=True, null=True)
    manifestation_creation_date_is_range = models.SmallIntegerField()
    manifestation_creation_date_as_marked = models.CharField(max_length=250, blank=True, null=True)
    opened = models.CharField(max_length=3)
    uuid = models.UUIDField(blank=True, null=True)
    routing_mark_stamp = models.TextField(blank=True, null=True)
    routing_mark_ms = models.TextField(blank=True, null=True)
    handling_instructions = models.TextField(blank=True, null=True)
    stored_folded = models.CharField(max_length=20, blank=True, null=True)
    postage_costs_as_marked = models.CharField(max_length=500, blank=True, null=True)
    postage_costs = models.CharField(max_length=500, blank=True, null=True)
    non_delivery_reason = models.CharField(max_length=500, blank=True, null=True)
    date_of_receipt_as_marked = models.CharField(max_length=500, blank=True, null=True)
    manifestation_receipt_calendar = models.CharField(max_length=2)
    manifestation_receipt_date = models.DateField(blank=True, null=True)
    manifestation_receipt_date_gregorian = models.DateField(blank=True, null=True)
    manifestation_receipt_date_year = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date_month = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date_day = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date_inferred = models.SmallIntegerField()
    manifestation_receipt_date_uncertain = models.SmallIntegerField()
    manifestation_receipt_date_approx = models.SmallIntegerField()
    manifestation_receipt_date2_year = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date2_month = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date2_day = models.IntegerField(blank=True, null=True)
    manifestation_receipt_date_is_range = models.SmallIntegerField()
    accompaniments = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_manifestation'


class CofkUnionNationality(models.Model):
    nationality_id = models.AutoField(primary_key=True)
    nationality_desc = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_union_nationality'


class CofkUnionOrgType(models.Model):
    org_type_id = models.AutoField(primary_key=True)
    org_type_desc = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_union_org_type'


class CofkUnionPerson(models.Model):
    person_id = models.CharField(primary_key=True, max_length=100)
    foaf_name = models.CharField(max_length=200)
    skos_altlabel = models.TextField(blank=True, null=True)
    skos_hiddenlabel = models.TextField(blank=True, null=True)
    person_aliases = models.TextField(blank=True, null=True)
    date_of_birth_year = models.IntegerField(blank=True, null=True)
    date_of_birth_month = models.IntegerField(blank=True, null=True)
    date_of_birth_day = models.IntegerField(blank=True, null=True)
    date_of_birth = models.DateField(blank=True, null=True)
    date_of_birth_inferred = models.SmallIntegerField()
    date_of_birth_uncertain = models.SmallIntegerField()
    date_of_birth_approx = models.SmallIntegerField()
    date_of_death_year = models.IntegerField(blank=True, null=True)
    date_of_death_month = models.IntegerField(blank=True, null=True)
    date_of_death_day = models.IntegerField(blank=True, null=True)
    date_of_death = models.DateField(blank=True, null=True)
    date_of_death_inferred = models.SmallIntegerField()
    date_of_death_uncertain = models.SmallIntegerField()
    date_of_death_approx = models.SmallIntegerField()
    gender = models.CharField(max_length=1)
    is_organisation = models.CharField(max_length=1)
    iperson_id = models.AutoField(unique=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    editors_notes = models.TextField(blank=True, null=True)
    further_reading = models.TextField(blank=True, null=True)
    organisation_type = models.ForeignKey(CofkUnionOrgType, models.DO_NOTHING, db_column='organisation_type', blank=True, null=True)
    date_of_birth_calendar = models.CharField(max_length=2)
    date_of_birth_is_range = models.SmallIntegerField()
    date_of_birth2_year = models.IntegerField(blank=True, null=True)
    date_of_birth2_month = models.IntegerField(blank=True, null=True)
    date_of_birth2_day = models.IntegerField(blank=True, null=True)
    date_of_death_calendar = models.CharField(max_length=2)
    date_of_death_is_range = models.SmallIntegerField()
    date_of_death2_year = models.IntegerField(blank=True, null=True)
    date_of_death2_month = models.IntegerField(blank=True, null=True)
    date_of_death2_day = models.IntegerField(blank=True, null=True)
    flourished = models.DateField(blank=True, null=True)
    flourished_calendar = models.CharField(max_length=2)
    flourished_is_range = models.SmallIntegerField()
    flourished_year = models.IntegerField(blank=True, null=True)
    flourished_month = models.IntegerField(blank=True, null=True)
    flourished_day = models.IntegerField(blank=True, null=True)
    flourished2_year = models.IntegerField(blank=True, null=True)
    flourished2_month = models.IntegerField(blank=True, null=True)
    flourished2_day = models.IntegerField(blank=True, null=True)
    uuid = models.UUIDField(blank=True, null=True)
    flourished_inferred = models.SmallIntegerField()
    flourished_uncertain = models.SmallIntegerField()
    flourished_approx = models.SmallIntegerField()

    class Meta:
        db_table = 'cofk_union_person'


class CofkUnionPersonSummary(models.Model):
    iperson = models.OneToOneField(CofkUnionPerson, models.DO_NOTHING, primary_key=True)
    other_details_summary = models.TextField(blank=True, null=True)
    other_details_summary_searchable = models.TextField(blank=True, null=True)
    sent = models.IntegerField()
    recd = models.IntegerField()
    all_works = models.IntegerField()
    mentioned = models.IntegerField()
    role_categories = models.TextField(blank=True, null=True)
    images = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_person_summary'


class CofkUnionPublication(models.Model):
    publication_id = models.AutoField(primary_key=True)
    publication_details = models.TextField()
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    abbrev = models.CharField(max_length=50)

    class Meta:
        db_table = 'cofk_union_publication'


class CofkUnionQueryableWork(models.Model):
    iwork_id = models.IntegerField(primary_key=True)
    work = models.OneToOneField('CofkUnionWork', models.DO_NOTHING)
    description = models.TextField(blank=True, null=True)
    date_of_work_std = models.DateField(blank=True, null=True)
    date_of_work_std_year = models.IntegerField(blank=True, null=True)
    date_of_work_std_month = models.IntegerField(blank=True, null=True)
    date_of_work_std_day = models.IntegerField(blank=True, null=True)
    date_of_work_as_marked = models.CharField(max_length=250, blank=True, null=True)
    date_of_work_inferred = models.SmallIntegerField()
    date_of_work_uncertain = models.SmallIntegerField()
    date_of_work_approx = models.SmallIntegerField()
    creators_searchable = models.TextField()
    creators_for_display = models.TextField()
    authors_as_marked = models.TextField(blank=True, null=True)
    notes_on_authors = models.TextField(blank=True, null=True)
    authors_inferred = models.SmallIntegerField()
    authors_uncertain = models.SmallIntegerField()
    addressees_searchable = models.TextField()
    addressees_for_display = models.TextField()
    addressees_as_marked = models.TextField(blank=True, null=True)
    addressees_inferred = models.SmallIntegerField()
    addressees_uncertain = models.SmallIntegerField()
    places_from_searchable = models.TextField()
    places_from_for_display = models.TextField()
    origin_as_marked = models.TextField(blank=True, null=True)
    origin_inferred = models.SmallIntegerField()
    origin_uncertain = models.SmallIntegerField()
    places_to_searchable = models.TextField()
    places_to_for_display = models.TextField()
    destination_as_marked = models.TextField(blank=True, null=True)
    destination_inferred = models.SmallIntegerField()
    destination_uncertain = models.SmallIntegerField()
    manifestations_searchable = models.TextField()
    manifestations_for_display = models.TextField()
    abstract = models.TextField(blank=True, null=True)
    keywords = models.TextField(blank=True, null=True)
    people_mentioned = models.TextField(blank=True, null=True)
    images = models.TextField(blank=True, null=True)
    related_resources = models.TextField(blank=True, null=True)
    language_of_work = models.CharField(max_length=255, blank=True, null=True)
    work_is_translation = models.SmallIntegerField()
    flags = models.TextField(blank=True, null=True)
    edit_status = models.CharField(max_length=3)
    general_notes = models.TextField(blank=True, null=True)
    original_catalogue = models.CharField(max_length=100)
    accession_code = models.CharField(max_length=1000, blank=True, null=True)
    work_to_be_deleted = models.SmallIntegerField()
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    drawer = models.CharField(max_length=50, blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)
    manifestation_type = models.CharField(max_length=50, blank=True, null=True)
    original_notes = models.TextField(blank=True, null=True)
    relevant_to_cofk = models.CharField(max_length=1)
    subjects = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_queryable_work'


class CofkUnionRelationship(models.Model):
    relationship_id = models.AutoField(primary_key=True)
    left_table_name = models.CharField(max_length=100)
    left_id_value = models.CharField(max_length=100)
    relationship_type = models.ForeignKey('CofkUnionRelationshipType', models.DO_NOTHING, db_column='relationship_type')
    right_table_name = models.CharField(max_length=100)
    right_id_value = models.CharField(max_length=100)
    relationship_valid_from = models.DateTimeField(blank=True, null=True)
    relationship_valid_till = models.DateTimeField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)

    class Meta:
        db_table = 'cofk_union_relationship'


class CofkUnionRelationshipType(models.Model):
    relationship_code = models.CharField(primary_key=True, max_length=50)
    desc_left_to_right = models.CharField(max_length=200)
    desc_right_to_left = models.CharField(max_length=200)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)

    class Meta:
        db_table = 'cofk_union_relationship_type'


class CofkUnionResource(models.Model):
    resource_id = models.AutoField(primary_key=True)
    resource_name = models.TextField()
    resource_details = models.TextField()
    resource_url = models.TextField()
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    uuid = models.UUIDField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_resource'


class CofkUnionRoleCategory(models.Model):
    role_category_id = models.AutoField(primary_key=True)
    role_category_desc = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_union_role_category'


class CofkUnionSpeedEntryText(models.Model):
    speed_entry_text_id = models.AutoField(primary_key=True)
    object_type = models.CharField(max_length=30)
    speed_entry_text = models.CharField(max_length=200)

    class Meta:
        db_table = 'cofk_union_speed_entry_text'


class CofkUnionSubject(models.Model):
    subject_id = models.AutoField(primary_key=True)
    subject_desc = models.CharField(max_length=100)

    class Meta:
        db_table = 'cofk_union_subject'


class CofkUnionWork(models.Model):
    work_id = models.CharField(primary_key=True, max_length=100)
    description = models.TextField(blank=True, null=True)
    date_of_work_as_marked = models.CharField(max_length=250, blank=True, null=True)
    original_calendar = models.CharField(max_length=2)
    date_of_work_std = models.CharField(max_length=12, blank=True, null=True)
    date_of_work_std_gregorian = models.CharField(max_length=12, blank=True, null=True)
    date_of_work_std_year = models.IntegerField(blank=True, null=True)
    date_of_work_std_month = models.IntegerField(blank=True, null=True)
    date_of_work_std_day = models.IntegerField(blank=True, null=True)
    date_of_work2_std_year = models.IntegerField(blank=True, null=True)
    date_of_work2_std_month = models.IntegerField(blank=True, null=True)
    date_of_work2_std_day = models.IntegerField(blank=True, null=True)
    date_of_work_std_is_range = models.SmallIntegerField()
    date_of_work_inferred = models.SmallIntegerField()
    date_of_work_uncertain = models.SmallIntegerField()
    date_of_work_approx = models.SmallIntegerField()
    authors_as_marked = models.TextField(blank=True, null=True)
    addressees_as_marked = models.TextField(blank=True, null=True)
    authors_inferred = models.SmallIntegerField()
    authors_uncertain = models.SmallIntegerField()
    addressees_inferred = models.SmallIntegerField()
    addressees_uncertain = models.SmallIntegerField()
    destination_as_marked = models.TextField(blank=True, null=True)
    origin_as_marked = models.TextField(blank=True, null=True)
    destination_inferred = models.SmallIntegerField()
    destination_uncertain = models.SmallIntegerField()
    origin_inferred = models.SmallIntegerField()
    origin_uncertain = models.SmallIntegerField()
    abstract = models.TextField(blank=True, null=True)
    keywords = models.TextField(blank=True, null=True)
    language_of_work = models.CharField(max_length=255, blank=True, null=True)
    work_is_translation = models.SmallIntegerField()
    incipit = models.TextField(blank=True, null=True)
    explicit = models.TextField(blank=True, null=True)
    ps = models.TextField(blank=True, null=True)
    original_catalogue = models.ForeignKey(CofkLookupCatalogue, models.DO_NOTHING, db_column='original_catalogue')
    accession_code = models.CharField(max_length=1000, blank=True, null=True)
    work_to_be_deleted = models.SmallIntegerField()
    iwork_id = models.AutoField(unique=True)
    editors_notes = models.TextField(blank=True, null=True)
    edit_status = models.CharField(max_length=3)
    relevant_to_cofk = models.CharField(max_length=3)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.CharField(max_length=50)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50)
    uuid = models.UUIDField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_union_work'


class CofkUserRoles(models.Model):
    username = models.OneToOneField('CofkUsers', models.DO_NOTHING, db_column='username', primary_key=True)
    role = models.ForeignKey(CofkRoles, models.DO_NOTHING)

    class Meta:
        db_table = 'cofk_user_roles'
        unique_together = (('username', 'role'),)


class CofkUserSavedQueries(models.Model):
    query_id = models.AutoField(primary_key=True)
    username = models.ForeignKey('CofkUsers', models.DO_NOTHING, db_column='username')
    query_class = models.CharField(max_length=100)
    query_method = models.CharField(max_length=100)
    query_title = models.TextField()
    query_order_by = models.CharField(max_length=100)
    query_sort_descending = models.SmallIntegerField()
    query_entries_per_page = models.SmallIntegerField()
    query_record_layout = models.CharField(max_length=12)
    query_menu_item_name = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_user_saved_queries'


class CofkUserSavedQuerySelection(models.Model):
    selection_id = models.AutoField(primary_key=True)
    query = models.ForeignKey(CofkUserSavedQueries, models.DO_NOTHING)
    column_name = models.CharField(max_length=100)
    column_value = models.CharField(max_length=500)
    op_name = models.CharField(max_length=100)
    op_value = models.CharField(max_length=100)
    column_value2 = models.CharField(max_length=500)

    class Meta:
        db_table = 'cofk_user_saved_query_selection'


class CofkUsers(models.Model):
    username = models.CharField(primary_key=True, max_length=30)
    pw = models.TextField()
    surname = models.CharField(max_length=30)
    forename = models.CharField(max_length=30)
    failed_logins = models.IntegerField()
    login_time = models.DateTimeField(blank=True, null=True)
    prev_login = models.DateTimeField(blank=True, null=True)
    active = models.SmallIntegerField()
    email = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'cofk_users'


class CopyCofkUnionQueryableWork(models.Model):
    iwork_id = models.IntegerField(blank=True, null=True)
    work_id = models.CharField(max_length=100, blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    date_of_work_std = models.DateField(blank=True, null=True)
    date_of_work_std_year = models.IntegerField(blank=True, null=True)
    date_of_work_std_month = models.IntegerField(blank=True, null=True)
    date_of_work_std_day = models.IntegerField(blank=True, null=True)
    date_of_work_as_marked = models.CharField(max_length=250, blank=True, null=True)
    date_of_work_inferred = models.SmallIntegerField(blank=True, null=True)
    date_of_work_uncertain = models.SmallIntegerField(blank=True, null=True)
    date_of_work_approx = models.SmallIntegerField(blank=True, null=True)
    creators_searchable = models.TextField(blank=True, null=True)
    creators_for_display = models.TextField(blank=True, null=True)
    authors_as_marked = models.TextField(blank=True, null=True)
    notes_on_authors = models.TextField(blank=True, null=True)
    authors_inferred = models.SmallIntegerField(blank=True, null=True)
    authors_uncertain = models.SmallIntegerField(blank=True, null=True)
    addressees_searchable = models.TextField(blank=True, null=True)
    addressees_for_display = models.TextField(blank=True, null=True)
    addressees_as_marked = models.TextField(blank=True, null=True)
    addressees_inferred = models.SmallIntegerField(blank=True, null=True)
    addressees_uncertain = models.SmallIntegerField(blank=True, null=True)
    places_from_searchable = models.TextField(blank=True, null=True)
    places_from_for_display = models.TextField(blank=True, null=True)
    origin_as_marked = models.TextField(blank=True, null=True)
    origin_inferred = models.SmallIntegerField(blank=True, null=True)
    origin_uncertain = models.SmallIntegerField(blank=True, null=True)
    places_to_searchable = models.TextField(blank=True, null=True)
    places_to_for_display = models.TextField(blank=True, null=True)
    destination_as_marked = models.TextField(blank=True, null=True)
    destination_inferred = models.SmallIntegerField(blank=True, null=True)
    destination_uncertain = models.SmallIntegerField(blank=True, null=True)
    manifestations_searchable = models.TextField(blank=True, null=True)
    manifestations_for_display = models.TextField(blank=True, null=True)
    abstract = models.TextField(blank=True, null=True)
    keywords = models.TextField(blank=True, null=True)
    people_mentioned = models.TextField(blank=True, null=True)
    images = models.TextField(blank=True, null=True)
    related_resources = models.TextField(blank=True, null=True)
    language_of_work = models.CharField(max_length=255, blank=True, null=True)
    work_is_translation = models.SmallIntegerField(blank=True, null=True)
    flags = models.TextField(blank=True, null=True)
    edit_status = models.CharField(max_length=3, blank=True, null=True)
    general_notes = models.TextField(blank=True, null=True)
    original_catalogue = models.CharField(max_length=100, blank=True, null=True)
    accession_code = models.CharField(max_length=1000, blank=True, null=True)
    work_to_be_deleted = models.SmallIntegerField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.CharField(max_length=50, blank=True, null=True)
    drawer = models.CharField(max_length=50, blank=True, null=True)
    editors_notes = models.TextField(blank=True, null=True)
    manifestation_type = models.CharField(max_length=50, blank=True, null=True)
    original_notes = models.TextField(blank=True, null=True)
    relevant_to_cofk = models.CharField(max_length=1, blank=True, null=True)
    subjects = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'copy_cofk_union_queryable_work'


class Iso639LanguageCodes(models.Model):
    code_639_3 = models.CharField(primary_key=True, max_length=3)
    code_639_1 = models.CharField(max_length=2)
    language_name = models.CharField(max_length=100)
    language_id = models.AutoField()

    class Meta:
        db_table = 'iso_639_language_codes'


class ProActivity(models.Model):
    activity_type_id = models.TextField(blank=True, null=True)
    activity_name = models.TextField(blank=True, null=True)
    activity_description = models.TextField(blank=True, null=True)
    date_type = models.TextField(blank=True, null=True)
    date_from_year = models.TextField(blank=True, null=True)
    date_from_month = models.TextField(blank=True, null=True)
    date_from_day = models.TextField(blank=True, null=True)
    date_from_uncertainty = models.TextField(blank=True, null=True)
    date_to_year = models.TextField(blank=True, null=True)
    date_to_month = models.TextField(blank=True, null=True)
    date_to_day = models.TextField(blank=True, null=True)
    date_to_uncertainty = models.TextField(blank=True, null=True)
    notes_used = models.TextField(blank=True, null=True)
    additional_notes = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    creation_user = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.TextField(blank=True, null=True)
    event_label = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'pro_activity'


class ProActivityRelation(models.Model):
    meta_activity_id = models.IntegerField(blank=True, null=True)
    filename = models.TextField()
    spreadsheet_row = models.IntegerField()
    combined_spreadsheet_row = models.IntegerField()

    class Meta:
        db_table = 'pro_activity_relation'


class ProAssertion(models.Model):
    assertion_type = models.TextField(blank=True, null=True)
    assertion_id = models.TextField(blank=True, null=True)
    source_id = models.TextField(blank=True, null=True)
    source_description = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)

    class Meta:
        db_table = 'pro_assertion'


class ProIngestMapV2(models.Model):
    relationship = models.TextField(blank=True, null=True)
    mapping = models.TextField(blank=True, null=True)
    s_event_category = models.TextField(blank=True, null=True)
    s_event_type = models.TextField(blank=True, null=True)
    s_role = models.TextField(blank=True, null=True)
    p_event_category = models.TextField(blank=True, null=True)
    p_event_type = models.TextField(blank=True, null=True)
    p_role = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'pro_ingest_map_v2'


class ProIngestV8(models.Model):
    event_category = models.TextField(blank=True, null=True)
    event_type = models.TextField(blank=True, null=True)
    event_name = models.TextField(blank=True, null=True)
    pp_i = models.TextField(blank=True, null=True)
    pp_name = models.TextField(blank=True, null=True)
    pp_role = models.TextField(blank=True, null=True)
    sp_i = models.TextField(blank=True, null=True)
    sp_name = models.TextField(blank=True, null=True)
    sp_type = models.TextField(blank=True, null=True)
    sp_role = models.TextField(blank=True, null=True)
    df_year = models.TextField(blank=True, null=True)
    df_month = models.TextField(blank=True, null=True)
    df_day = models.TextField(blank=True, null=True)
    df_uncertainty = models.TextField(blank=True, null=True)
    dt_year = models.TextField(blank=True, null=True)
    dt_month = models.TextField(blank=True, null=True)
    dt_day = models.TextField(blank=True, null=True)
    dt_uncertainty = models.TextField(blank=True, null=True)
    date_type = models.TextField(blank=True, null=True)
    location_i = models.TextField(blank=True, null=True)
    location_detail = models.TextField(blank=True, null=True)
    location_city = models.TextField(blank=True, null=True)
    location_region = models.TextField(blank=True, null=True)
    location_country = models.TextField(blank=True, null=True)
    location_type = models.TextField(blank=True, null=True)
    ts_abbrev = models.TextField(blank=True, null=True)
    ts_detail = models.TextField(blank=True, null=True)
    editor = models.TextField(blank=True, null=True)
    noted_used = models.TextField(blank=True, null=True)
    add_notes = models.TextField(blank=True, null=True)
    filename = models.TextField(blank=True, null=True)
    spreadsheet_row_id = models.TextField(blank=True, null=True)
    combined_csv_row_id = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'pro_ingest_v8'


class ProIngestV8Toreview(models.Model):
    event_category = models.TextField(blank=True, null=True)
    event_type = models.TextField(blank=True, null=True)
    event_name = models.TextField(blank=True, null=True)
    pp_i = models.TextField(blank=True, null=True)
    pp_name = models.TextField(blank=True, null=True)
    pp_role = models.TextField(blank=True, null=True)
    sp_i = models.TextField(blank=True, null=True)
    sp_name = models.TextField(blank=True, null=True)
    sp_type = models.TextField(blank=True, null=True)
    sp_role = models.TextField(blank=True, null=True)
    df_year = models.TextField(blank=True, null=True)
    df_month = models.TextField(blank=True, null=True)
    df_day = models.TextField(blank=True, null=True)
    df_uncertainty = models.TextField(blank=True, null=True)
    dt_year = models.TextField(blank=True, null=True)
    dt_month = models.TextField(blank=True, null=True)
    dt_day = models.TextField(blank=True, null=True)
    dt_uncertainty = models.TextField(blank=True, null=True)
    date_type = models.TextField(blank=True, null=True)
    location_i = models.TextField(blank=True, null=True)
    location_detail = models.TextField(blank=True, null=True)
    location_city = models.TextField(blank=True, null=True)
    location_region = models.TextField(blank=True, null=True)
    location_country = models.TextField(blank=True, null=True)
    location_type = models.TextField(blank=True, null=True)
    ts_abbrev = models.TextField(blank=True, null=True)
    ts_detail = models.TextField(blank=True, null=True)
    editor = models.TextField(blank=True, null=True)
    noted_used = models.TextField(blank=True, null=True)
    add_notes = models.TextField(blank=True, null=True)
    filename = models.TextField(blank=True, null=True)
    spreadsheet_row_id = models.TextField(blank=True, null=True)
    combined_csv_row_id = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'pro_ingest_v8_toreview'


class ProLocation(models.Model):
    location_id = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    activity_id = models.IntegerField(blank=True, null=True)

    class Meta:
        db_table = 'pro_location'


class ProPeopleCheck(models.Model):
    person_name = models.TextField(blank=True, null=True)
    iperson_id = models.TextField(blank=True, null=True)

    class Meta:
        db_table = 'pro_people_check'


class ProPrimaryPerson(models.Model):
    person_id = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    activity_id = models.IntegerField(blank=True, null=True)

    class Meta:
        db_table = 'pro_primary_person'


class ProRelationship(models.Model):
    subject_id = models.TextField(blank=True, null=True)
    subject_type = models.TextField(blank=True, null=True)
    subject_role_id = models.TextField(blank=True, null=True)
    relationship_id = models.TextField(blank=True, null=True)
    object_id = models.TextField(blank=True, null=True)
    object_type = models.TextField(blank=True, null=True)
    object_role_id = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    activity_id = models.IntegerField(blank=True, null=True)

    class Meta:
        db_table = 'pro_relationship'


class ProRoleInActivity(models.Model):
    entity_type = models.TextField(blank=True, null=True)
    entity_id = models.TextField(blank=True, null=True)
    role_id = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)
    activity_id = models.IntegerField(blank=True, null=True)

    class Meta:
        db_table = 'pro_role_in_activity'


class ProTextualSource(models.Model):
    author = models.TextField(blank=True, null=True)
    title = models.TextField(blank=True, null=True)
    chapterarticletitle = models.TextField(db_column='chapterArticleTitle', blank=True, null=True)  # Field name made lowercase.
    volumeseriesnumber = models.TextField(db_column='volumeSeriesNumber', blank=True, null=True)  # Field name made lowercase.
    issuenumber = models.TextField(db_column='issueNumber', blank=True, null=True)  # Field name made lowercase.
    pagenumber = models.TextField(db_column='pageNumber', blank=True, null=True)  # Field name made lowercase.
    editor = models.TextField(blank=True, null=True)
    placepublication = models.TextField(db_column='placePublication', blank=True, null=True)  # Field name made lowercase.
    datepublication = models.TextField(db_column='datePublication', blank=True, null=True)  # Field name made lowercase.
    urlresource = models.TextField(db_column='urlResource', blank=True, null=True)  # Field name made lowercase.
    abbreviation = models.TextField(blank=True, null=True)
    fullbibliographicdetails = models.TextField(db_column='fullBibliographicDetails', blank=True, null=True)  # Field name made lowercase.
    edition = models.TextField(blank=True, null=True)
    reprintfacsimile = models.TextField(db_column='reprintFacsimile', blank=True, null=True)  # Field name made lowercase.
    repository = models.TextField(blank=True, null=True)
    creation_user = models.TextField(blank=True, null=True)
    creation_timestamp = models.DateTimeField(blank=True, null=True)
    change_user = models.TextField(blank=True, null=True)
    change_timestamp = models.DateTimeField(blank=True, null=True)

    class Meta:
        db_table = 'pro_textual_source'
